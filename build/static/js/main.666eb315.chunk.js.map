{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","props","show","map","person","i","key","name","number","onClick","handleDelete","id","PersonForm","onSubmit","add","value","onChange","handleName","handleNumber","type","Filter","showOnly","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setShowOnly","setMessage","useEffect","personService","initialPersons","personsToShow","length","filter","toLowerCase","includes","event","target","preventDefault","personObject","allNumbers","changeNumber","find","window","confirm","returnedPerson","setTimeout","console","log","concat","catch","error","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.666eb315.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = props =>{\r\n    return(\r\n      <div>\r\n      {props.show.map((person, i) =>\r\n        <p key={i}>{`${person.name} ${person.number} `}\r\n        <button onClick={() => props.handleDelete(person.id)}>delete</button>\r\n        </p>\r\n        )\r\n      }\r\n    </div>\r\n    ) \r\n  }\r\n\r\nexport default Persons\r\n\r\n","import React from 'react'\r\n\r\nconst PersonForm = props => {\r\n    return(\r\n      <form onSubmit={props.add}>\r\n        <label> name: </label>\r\n        <input value={props.name}\r\n          onChange={props.handleName}/>\r\n\r\n        <label> number: </label>\r\n        <input value={props.number} \r\n          onChange={props.handleNumber}/>\r\n        <b></b>\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import React from 'react'\r\n\r\nconst Filter = props => {\r\n    return(\r\n      <form>\r\n       <label>filter shown with </label>\r\n       <input value={props.showOnly}\r\n       onChange={props.onChange}/>\r\n   </form>\r\n    ) \r\n }\r\n\r\n export default Filter","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    if(props.message === null){\r\n      return null\r\n    }\r\n    return(\r\n      <div className='error'>\r\n        {props.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update,\r\n  remove: remove\r\n}","\nimport React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  //syötettä varten\n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showOnly, setShowOnly] = useState('')\n  const [message, setMessage] = useState(null)\n \n  // Haetaan data palvelimelta. \n  useEffect(() => {\n    personService\n    .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n      })\n  }, [])\n\n  //Nimilistan rajaus\n const personsToShow = (showOnly.length === 0) \n ? persons\n : persons.filter(person => {\n    return person.name.toLowerCase().includes(showOnly.toLowerCase())\n  })\n\n  //Lisää henkilö (+ehdot onnistuneeseen lisäykseen)\n  const addPerson = (event) =>{\n    event.preventDefault()\n    const personObject = {name: newName, number: newNumber}\n    const allNumbers = persons.map(person => person.name.toLowerCase())\n    const changeNumber = persons.find(person => person.name === newName)\n\n    if(allNumbers.includes(newName.toLowerCase())){\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`) \n      if (confirm) {\n        personService\n        .update(changeNumber.id, personObject)\n          .then(returnedPerson => {\n            setMessage(`${personObject.name} number changed to ${personObject.number}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 4000)\n            setPersons(persons.map(person => person.id !== changeNumber.id ? person : returnedPerson))\n          })\n      }\n    } else{\n      console.log(` PersonObject = ${personObject}`)\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n          setMessage(`Added ${personObject.name}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n      })\n      .catch((error) => \n      // pääset käsiksi palvelimen palauttamaan virheilmoitusolioon näin\n        setMessage(error.response.data.error)\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 4000)\n    }\n  }\n\n  //Poista henkilö\n  const handleDelete = (id) => {\n    console.log(` Delete id: ${id} is`)\n    const remove = persons.find(person => person.id === id)\n    const confirm = window.confirm(`Delete ${remove.name} ?`)\n\n    if (confirm) {\n      personService\n      .remove(id)\n        .then(response => {\n          setMessage(`Deleted ${remove.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          setMessage(`Information of ${remove.name} has already been removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n    }\n  }\n\n  //Synkronoi syötekenttiin tehdyt muutokset\n  const handleNameChange= (event) =>{\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) =>{\n    setNewNumber(event.target.value)\n  }\n\n  const handleShowChange = (event) =>{\n    setShowOnly(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter showOnly={showOnly} onChange={handleShowChange}/>\n      <h3>Add a new</h3>\n      <PersonForm add ={addPerson} name={newName} number={newNumber} handleName={handleNameChange} handleNumber={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons show={personsToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n<App/>, \ndocument.getElementById('root')\n)"],"sourceRoot":""}